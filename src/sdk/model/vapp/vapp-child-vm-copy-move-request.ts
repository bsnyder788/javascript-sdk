import { VappChildVmCopyMoveRequestJson } from './__json__/vapp-child-vm-copy-move-request-json';

/**
 * vApp child VM copy move request.
 */
/* istanbul ignore next: autogenerated */
export class VappChildVmCopyMoveRequest {

  private readonly _json: VappChildVmCopyMoveRequestJson;

  constructor(vappChildVmCopyMoveRequest: VappChildVmCopyMoveRequest);
  constructor(vappChildVmCopyMoveRequestJson: VappChildVmCopyMoveRequestJson);
  constructor(vmUuid: string, storageProfile: string);
  constructor(firstParam: string | VappChildVmCopyMoveRequest | VappChildVmCopyMoveRequestJson,
              storageProfile?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        vm_uuid: firstParam,
        storage_profile: storageProfile
      } as VappChildVmCopyMoveRequestJson;
    } else if (firstParam instanceof VappChildVmCopyMoveRequest) {
      // Copy constructor
      this._json = (firstParam as VappChildVmCopyMoveRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as VappChildVmCopyMoveRequestJson;
    }
  }

  /**
   * Get vm uuid.
   * @returns {string}
   */
  get vmUuid(): string {
    return this._json.vm_uuid;
  }

  /**
   * Get storage profile.
   * @returns {string}
   */
  get storageProfile(): string {
    return this._json.storage_profile;
  }

  /**
   * Get the json representation of this class.
   * @returns {VappChildVmCopyMoveRequestJson}
   */
  get json(): VappChildVmCopyMoveRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
